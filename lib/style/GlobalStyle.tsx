import { useThemeStore } from "../../global-store/ThemeStore";

export const DarkStyle = {
    background: "hsl(224 71% 4%)",
    foreground: "hsl(213 31% 91%)",
    muted: "hsl(223 47% 11%)",
    mutedForeground: "hsl(215.4 16.3% 56.9%)",
    accent: "hsl(216 34% 17%)",
    accentForeground: "hsl(210 40% 98%)",
    popover: "hsl(224 71% 4%)",
    popoverForeground: "hsl(215 20.2% 65.1%)",
    border: "hsl(216 34% 17%)",
    input: "hsl(216 34% 17%)",
    card: "hsl(224 71% 4%)",
    cardForeground: "hsl(213 31% 91%)",
    primary: "hsl(210 40% 98%)",
    primaryHover: "hsla(210, 40%, 98%, 0.9)",
    primaryForeground: "hsl(222.2 47.4% 1.2%)",
    secondary: "hsl(222.2 47.4% 11.2%)",
    secondaryForeground: "hsl(210 40% 98%)",
    destructive: "hsl(0 63% 31%)",
    destructiveForeground: "hsl(210 40% 98%)",
    ring: "hsl(216 34% 17%)",
    space: {
        p0: 0,
        p0p5: 2,
        p1: 4,
        p1p5: 6,
        p2: 8,
        p2p5: 10,
        p3: 12,
        p3p5: 14,
        p4: 16,
        p5: 20,
        p6: 24,
        p7: 28,
        p8: 32,
        p9: 36,
        p10: 40,
        p11: 44,
        p12: 48,
        p14: 56,
        p16: 64,
        p20: 80,
        p24: 96,
        p28: 112,
        p32: 128,
        p36: 144,
        p40: 160,
        p44: 176,
        p48: 192,
        p52: 208,
        p56: 224,
        p60: 240,
        p64: 256,
        p72: 288,
        p80: 320,
        p96: 384,
    },
    fontSize: {
        xs: 12,
        sm: 14,
        base: 16,
        lg: 18,
        lx: 20,
        lx2: 24,
    },
    fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900",
    },
    borderWidth: 1,
    rounded: {
        sm: 2,
        base: 4,
        md: 6,
        lg: 8,
        xl: 12,
        xl2: 16,
        xl3: 24,
    },

    radius: 20,
};
export const LightStyle = {
    background: "hsl(0 0% 100%)",
    foreground: "hsl(222.2 47.4% 11.2%)",
    muted: "hsl(210 40% 96.1%)",
    mutedForeground: "hsl(215.4 16.3% 46.9%)",
    accent: "hsl(210 40% 96.1%)",
    accentForeground: "hsl(222.2 47.4% 11.2%)",
    popover: "hsl(0 0% 100%)",
    popoverForeground: "hsl(222.2 47.4% 11.2%)",
    border: "hsl(214.3 31.8% 91.4%)",
    input: "hsl(214.3 31.8% 91.4%)",
    card: "hsl(0 0% 100%)",
    cardForeground: "hsl(222.2 47.4% 11.2%)",
    primary: "hsl(222.2 47.4% 11.2%)",
    primaryHover: "hsla(222.2, 47.4%, 11.2%, 0.7)",
    primaryForeground: "hsl(210 40% 98%)",
    secondary: "hsl(210 40% 96.1%)",
    secondaryForeground: "hsl(222.2 47.4% 11.2%)",
    destructive: "hsl(0 100% 50%)",
    destructiveForeground: "hsl(210 40% 98%)",
    ring: "hsl(215 20.2% 65.1%)",
    space: {
        p0: 0,
        p0p5: 2,
        p1: 4,
        p1p5: 6,
        p2: 8,
        p2p5: 10,
        p3: 12,
        p3p5: 14,
        p4: 16,
        p5: 20,
        p6: 24,
        p7: 28,
        p8: 32,
        p9: 36,
        p10: 40,
        p11: 44,
        p12: 48,
        p14: 56,
        p16: 64,
        p20: 80,
        p24: 96,
        p28: 112,
        p32: 128,
        p36: 144,
        p40: 160,
        p44: 176,
        p48: 192,
        p52: 208,
        p56: 224,
        p60: 240,
        p64: 256,
        p72: 288,
        p80: 320,
        p96: 384,
    },
    fontSize: {
        xs: 12,
        sm: 14,
        base: 16,
        lg: 18,
        lx: 20,
        lx2: 24,
    },
    fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900",
    },
    rounded: {
        sm: 2,
        base: 4,
        md: 6,
        lg: 8,
        xl: 12,
        xl2: 16,
        xl3: 24,
    },
    borderWidth: 1,
    radius: 20,
};

export const getBaseStyle = (isDark?: boolean) => {
    if (isDark === undefined) {
        isDark = useThemeStore((state) => state.isDark);
    }
    return isDark ? DarkStyle : LightStyle;
};
